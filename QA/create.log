-- Install all necesary DB object

-- Firebird UDF
INPUT c:/fb/udf/fbudf.sql;
/*
 *
 *     The contents of this file are subject to the Initial
 *     Developer's Public License Version 1.0 (the "License");
 *     you may not use this file except in compliance with the
 *     License. You may obtain a copy of the License at
 *     http://www.ibphoenix.com/idpl.html.
 *
 *     Software distributed under the License is distributed on
 *     an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
 *     express or implied.  See the License for the specific
 *     language governing rights and limitations under the License.
 *
 *
 *  The Original Code was created by Claudio Valderrama C. for IBPhoenix.
 *  The development of the Original Code was sponsored by Craig Leonardi.
 *
 *  Copyright (c) 2001 IBPhoenix
 *  All Rights Reserved.
 */


/* This file defines the new udfs for Firebird. */

set sql dialect 3;

-- The Nvl family is deprecated. Use native COALESCE instead.
--FBUDF_API paramdsc* idNvl(paramdsc* v, paramdsc* v2)
declare external function invl
int by descriptor, int by descriptor
returns int by descriptor
entry_point 'idNvl' module_name 'fbudf';

--FBUDF_API paramdsc* idNvl(paramdsc* v, paramdsc* v2)
declare external function i64nvl
numeric(18,0) by descriptor, numeric(18,0) by descriptor
returns numeric(18,0) by descriptor
entry_point 'idNvl' module_name 'fbudf';

--FBUDF_API paramdsc* idNvl(paramdsc* v, paramdsc* v2)
declare external function dnvl
double precision by descriptor, double precision by descriptor
returns double precision by descriptor
entry_point 'idNvl' module_name 'fbudf';

--FBUDF_API paramdsc* sNvl(paramdsc* v, paramdsc* v2, paramdsc* rc)
declare external function snvl
varchar(100) by descriptor, varchar(100) by descriptor,
varchar(100) by descriptor returns parameter 3
entry_point 'sNvl' module_name 'fbudf';

-- The NullIf family is deprecated. Use native NULLIF instead.
--FBUDF_API paramdsc* iNullIf(paramdsc* v, paramdsc* v2)
declare external function inullif
int by descriptor, int by descriptor
returns int by descriptor
entry_point 'iNullIf' module_name 'fbudf';

--FBUDF_API paramdsc* dNullIf(paramdsc* v, paramdsc* v2)
declare external function dnullif
double precision by descriptor, double precision by descriptor
returns double precision by descriptor
entry_point 'dNullIf' module_name 'fbudf';

--FBUDF_API paramdsc* iNullIf(paramdsc* v, paramdsc* v2)
declare external function i64nullif
numeric(18,4) by descriptor, numeric(18,4) by descriptor
returns numeric(18,4) by descriptor
entry_point 'iNullIf' module_name 'fbudf';

--FBUDF_API paramdsc* sNullIf(paramdsc* v, paramdsc* v2, paramdsc* rc)
declare external function snullif
varchar(100) by descriptor, varchar(100) by descriptor,
varchar(100) by descriptor returns parameter 3
entry_point 'sNullIf' module_name 'fbudf';

--FBUDF_API char* DOW(ISC_DATE* v, char* rc)
declare external function dow
timestamp,
varchar(15) returns parameter 2
entry_point 'DOW' module_name 'fbudf';

--FBUDF_API char* SDOW(ISC_DATE* v, char* rc)
declare external function sdow
timestamp,
varchar(5) returns parameter 2
entry_point 'SDOW' module_name 'fbudf';

--FBUDF_API paramdsc* right(const paramdsc*, const ISC_SHORT& rl, paramdsc* rc)
declare external function sright
varchar(100) by descriptor, smallint,
varchar(100) by descriptor returns parameter 3
entry_point 'right' module_name 'fbudf';

--FBUDF_API ISC_TIMESTAMP* addDay(ISC_TIMESTAMP* v, const ISC_SLONG& ndays)
declare external function addDay
timestamp, int
returns timestamp
entry_point 'addDay' module_name 'fbudf';

--FBUDF_API void addDay2(const ISC_TIMESTAMP* v0, const ISC_SLONG& ndays, ISC_TIMESTAMP* v)
declare external function addDay2
timestamp, int, timestamp
returns parameter 3
entry_point 'addDay2' module_name 'fbudf';

--FBUDF_API ISC_TIMESTAMP* addWeek(ISC_TIMESTAMP* v, const ISC_SLONG& nweeks)
declare external function addWeek
timestamp, int
returns timestamp
entry_point 'addWeek' module_name 'fbudf';

--FBUDF_API ISC_TIMESTAMP* addMonth(ISC_TIMESTAMP* v, const ISC_SLONG& nmonths)
declare external function addMonth
timestamp, int
returns timestamp
entry_point 'addMonth' module_name 'fbudf';

--FBUDF_API ISC_TIMESTAMP* addYear(ISC_TIMESTAMP* v, const ISC_SLONG& nyears)
declare external function addYear
timestamp, int
returns timestamp
entry_point 'addYear' module_name 'fbudf';

--FBUDF_API ISC_TIMESTAMP* addMilliSecond(ISC_TIMESTAMP* v, const ISC_SLONG& nseconds)
declare external function addMilliSecond
timestamp, int
returns timestamp
entry_point 'addMilliSecond' module_name 'fbudf';

--FBUDF_API ISC_TIMESTAMP* addSecond(ISC_TIMESTAMP* v, const ISC_SLONG& nseconds)
declare external function addSecond
timestamp, int
returns timestamp
entry_point 'addSecond' module_name 'fbudf';

--FBUDF_API ISC_TIMESTAMP* addMinute(ISC_TIMESTAMP* v, const ISC_SLONG& nminutes)
declare external function addMinute
timestamp, int
returns timestamp
entry_point 'addMinute' module_name 'fbudf';

--FBUDF_API ISC_TIMESTAMP* addHour(ISC_TIMESTAMP* v, const ISC_SLONG& nhours)
declare external function addHour
timestamp, int
returns timestamp
entry_point 'addHour' module_name 'fbudf';

--It will work only with Win32 until it's ported to another OS.
--FBUDF_API ISC_TIMESTAMP* getExactTimestamp(ISC_TIMESTAMP* rc)
declare external function getExactTimestamp
timestamp
returns parameter 1
entry_point 'getExactTimestamp' module_name 'fbudf';

--It will work only with Win32 until it's ported to another OS.
--FBUDF_API void getExactTimestampUTC(ISC_TIMESTAMP* rc);
declare external function getExactTimestampUTC
timestamp
returns parameter 1
entry_point 'getExactTimestampUTC' module_name 'fbudf';

--FBUDF_API int isLeapYear(const ISC_TIMESTAMP* v);
declare external function isLeapYear
timestamp
returns int by value
entry_point 'isLeapYear' module_name 'fbudf';

--FBUDF_API paramdsc* fbtruncate(const paramdsc* v, paramdsc* rc)
declare external function Truncate
int by descriptor, int by descriptor
returns parameter 2
entry_point 'fbtruncate' module_name 'fbudf';

--FBUDF_API paramdsc* fbtruncate(const paramdsc* v, paramdsc* rc)
declare external function i64Truncate
numeric(18) by descriptor, numeric(18) by descriptor
returns parameter 2
entry_point 'fbtruncate' module_name 'fbudf';

--FBUDF_API paramdsc* fbround(const paramdsc* v, paramdsc* rc)
declare external function Round
int by descriptor, int by descriptor
returns parameter 2
entry_point 'fbround' module_name 'fbudf';

--FBUDF_API paramdsc* fbround(const paramdsc* v, paramdsc* rc)
declare external function i64Round
numeric(18, 4) by descriptor, numeric(18, 4) by descriptor
returns parameter 2
entry_point 'fbround' module_name 'fbudf';

--FBUDF_API paramdsc* power(const paramdsc* v, const paramdsc* v2, paramdsc* rc)
declare external function dPower
double precision by descriptor, double precision by descriptor,
double precision by descriptor
returns parameter 3
entry_point 'power' module_name 'fbudf';

--FBUDF_API blobcallback* string2blob(const paramdsc* v, blobcallback* outblob)
declare external function string2blob
varchar(300) by descriptor,
blob returns parameter 2
entry_point 'string2blob' module_name 'fbudf';



-- IBReplicator config
INPUT c:\IBReplicator\config.sql;
/* This script makes a database IBPReplicator configuration database */
SET TERM ^;
SET AUTODDL ON^

CREATE TABLE REPL$CONFIG (
  CONFLICTMETHOD INTEGER DEFAULT 2 NOT NULL,
  LOGFILENAME VARCHAR(255) CHARACTER SET NONE DEFAULT 'REPLICATE.LOG' NOT NULL,
  LOGTOFILE INTEGER DEFAULT 3 NOT NULL,
  LOGTOWINDOW INTEGER DEFAULT 3 NOT NULL,
  VERSION INTEGER NOT NULL,
  BKGRNDIMG VARCHAR(254) CHARACTER SET NONE,
  LINKCOLORUNSEL INTEGER,
  LINKCOLORSEL INTEGER,
  DEFAULTSET CHAR(1) CHARACTER SET NONE DEFAULT 'Y',
  SCHEDULER_ENABLED CHAR(1) CHARACTER SET NONE DEFAULT 'N' NOT NULL,
  ERROR_HOSTNAME VARCHAR(255) CHARACTER SET NONE DEFAULT '',
  ERROR_FROMADDRESS VARCHAR(255) CHARACTER SET NONE DEFAULT '',
  ERROR_FROMNAME VARCHAR(255) CHARACTER SET NONE DEFAULT '',
  ERROR_TOOADDRESS VARCHAR(255) CHARACTER SET NONE DEFAULT '',
  REPL_BEEP CHAR(1) CHARACTER SET NONE DEFAULT 'N',
  NOTIFY_ERROR_MESSAGE CHAR(1) CHARACTER SET NONE DEFAULT 'N',
  MAIL_SYSDBA CHAR(1) CHARACTER SET NONE DEFAULT 'N',
  FPS_TIMEOUT INTEGER DEFAULT 0 NOT NULL,
  FKBEHAVIOR INTEGER DEFAULT 0 NOT NULL)^

CREATE TABLE REPL$DATABASES (
  DBNO INTEGER NOT NULL CONSTRAINT REPL$DATABASES_PK PRIMARY KEY,
  DBPATH VARCHAR(254) CHARACTER SET NONE,
  DBNAME VARCHAR(100) CHARACTER SET NONE,
  ADMINUSER VARCHAR(50) CHARACTER SET NONE ,
  ADMINPASSWORD VARCHAR(50) CHARACTER SET NONE,
  COMMENTS VARCHAR(1000) CHARACTER SET NONE,
  PRIORITY INTEGER DEFAULT 0 NOT NULL,
  TIMEFIELDNAME VARCHAR(100) CHARACTER SET NONE,
  CHARSET VARCHAR(20) CHARACTER SET NONE DEFAULT '' NOT NULL,
  DBTYPE INTEGER DEFAULT 0 NOT NULL,
  X INTEGER DEFAULT -1,
  Y INTEGER DEFAULT -1,
  USERROLE VARCHAR(50) CHARACTER SET NONE,
  DIALECT INTEGER DEFAULT 0,
  DIALUSERNAME VARCHAR(20) CHARACTER SET NONE,
  DIALPASSWORD VARCHAR(20) CHARACTER SET NONE,
  RASNAME VARCHAR(20) CHARACTER SET NONE,
  KEEPCONNECTION INTEGER DEFAULT 0 NOT NULL,
  MOREPARAMS BLOB SUB_TYPE TEXT CHARACTER SET NONE)^

CREATE TABLE REPL$SCHEMATA (
  REPLNO INTEGER NOT NULL CONSTRAINT REPL$SCHEMATA_PK PRIMARY KEY,
  NAME VARCHAR(100) CHARACTER SET NONE NOT NULL,
  PUBDBNO INTEGER NOT NULL CONSTRAINT REPL$C_SCHEMATA_DATABASE REFERENCES REPL$DATABASES,
  DISABLED CHAR(1) CHARACTER SET NONE DEFAULT 'N',
  COMMENTS VARCHAR(1000) CHARACTER SET NONE,
  USERNAME VARCHAR(31) CHARACTER SET NONE,
  PSWORD VARCHAR(31) CHARACTER SET NONE ,
  CONFLICTMETHOD INTEGER DEFAULT 2 NOT NULL,
  USEDEFAULTCONFLICT INTEGER DEFAULT 1 NOT NULL,
  USEDEFAULTLOGGING INTEGER DEFAULT 1 NOT NULL,
  LOGFILENAME VARCHAR(255) CHARACTER SET NONE,
  LOGTOFILE INTEGER DEFAULT 0 NOT NULL,
  LOGTOWINDOW INTEGER DEFAULT 0 NOT NULL,
  SEP INTEGER DEFAULT 9 NOT NULL,
  USERROLE VARCHAR(50) CHARACTER SET NONE,
  SORT_KEY INTEGER)^

CREATE TABLE REPL$KEYFIELDS (
  REPLNO INTEGER NOT NULL,
  TGTDBNO INTEGER NOT NULL,
  RELATIONNO INTEGER NOT NULL,
  FIELDNO INTEGER NOT NULL,
  FIELDNAME VARCHAR(100) CHARACTER SET NONE,
  TARGETNAME VARCHAR(100) CHARACTER SET NONE ,
  CONSTRAINT REPL$KF_PK PRIMARY KEY (REPLNO, TGTDBNO, RELATIONNO, FIELDNO))^

CREATE TABLE REPL$DATAFIELDS (
  REPLNO INTEGER NOT NULL,
  TGTDBNO INTEGER NOT NULL,
  RELATIONNO INTEGER NOT NULL,
  FIELDNO INTEGER NOT NULL,
  FIELDNAME VARCHAR(100) CHARACTER SET NONE,
  TARGETNAME VARCHAR(100) CHARACTER SET NONE,
  CONSTRAINT REPL$DF_PK PRIMARY KEY (REPLNO, TGTDBNO, RELATIONNO, FIELDNO))^

CREATE TABLE REPL$RELATIONS (REPLNO INTEGER NOT NULL,
  RELATIONNO INTEGER NOT NULL,
  RELATIONSCHEMA VARCHAR(100) CHARACTER SET NONE,
  RELATIONNAME VARCHAR(100) CHARACTER SET NONE,
  COMMENTS VARCHAR(1000) CHARACTER SET NONE,
  DISABLED CHAR(1) CHARACTER SET NONE DEFAULT 'N',
  TIMEFIELDNAME VARCHAR(100) CHARACTER SET NONE,
  CONDITION VARCHAR(255) CHARACTER SET NONE DEFAULT '' NOT NULL,
  TGTDBNO INTEGER NOT NULL,
  TARGETSCHEMA VARCHAR(100) CHARACTER SET NONE,
  TARGETNAME VARCHAR(100) CHARACTER SET NONE,
  TARGETTYPE CHAR(1) CHARACTER SET NONE,
  SEP INTEGER DEFAULT 9 NOT NULL,
  INSERTS INTEGER DEFAULT 0 NOT NULL,
  UPDATES INTEGER DEFAULT 0 NOT NULL,
  DELETES INTEGER DEFAULT 0 NOT NULL,
  SECONDS INTEGER DEFAULT 0 NOT NULL,
  KEEPSTATS INTEGER DEFAULT 0 NOT NULL,
  ERRORS INTEGER DEFAULT 0 NOT NULL,
  CONFLICTS INTEGER DEFAULT 0 NOT NULL,
  SORT_KEY INTEGER,
  OPS CHAR(3) CHARACTER SET NONE DEFAULT 'UID' NOT NULL,
  CONFLICTMETHOD INTEGER DEFAULT -1 NOT NULL,
  FKBEHAVIOR INTEGER DEFAULT -1 NOT NULL,
  CONSTRAINT REPL$RELATIONS_PK PRIMARY KEY (REPLNO, TGTDBNO, RELATIONNO))^

CREATE TABLE REPL$SCHEDULE (
  ID INTEGER NOT NULL CONSTRAINT REPL$SCHEDULE_PK PRIMARY KEY,
  FREQUENCY INTEGER NOT NULL,
  ENABLED CHAR(1) CHARACTER SET NONE DEFAULT 'Y' NOT NULL,
  INT_VALUE INTEGER,
  TIME_VALUE VARCHAR(8) CHARACTER SET NONE,
  DATE_VALUE VARCHAR(20) CHARACTER SET NONE)^
  
CREATE TABLE REPL$SUBSCRIBEDDB (
  REPLNO INTEGER NOT NULL,
  DBNO INTEGER NOT NULL,
  USERNAME VARCHAR(31) CHARACTER SET NONE,
  PSWORD VARCHAR(31) CHARACTER SET NONE,
  USERROLE VARCHAR(50) CHARACTER SET NONE,
  COMMITCOUNT INTEGER DEFAULT 0,
  CONDITION VARCHAR(255) CHARACTER SET NONE DEFAULT '' NOT NULL,
  USEDEFAULTLOGGING INTEGER DEFAULT 1 NOT NULL,
  LOGFILENAME VARCHAR(255) CHARACTER SET NONE,
  LOGTOFILE INTEGER DEFAULT 0 NOT NULL,
  LOGTOWINDOW INTEGER DEFAULT 0 NOT NULL,
  SORT_KEY INTEGER,
  CONSTRAINT REPL$SUBSCRIBEDDB_PK PRIMARY KEY (REPLNO, DBNO))^

CREATE TABLE REPL$SEQUENCES (
  REPLNO INTEGER NOT NULL,
  TGTDBNO INTEGER NOT NULL,
  SEQNO INTEGER NOT NULL CONSTRAINT REPL$SEQ_PK PRIMARY KEY,
  SOURCESCHEMA VARCHAR(100) CHARACTER SET NONE DEFAULT '' NOT NULL,
  SOURCENAME VARCHAR(100) CHARACTER SET NONE NOT NULL,
  TARGETSCHEMA VARCHAR(100) CHARACTER SET NONE DEFAULT '' NOT NULL,
  TARGETNAME VARCHAR(100) CHARACTER SET NONE NOT NULL,
  CONSTRAINT REPL$C_SEQ_SUBSCRIBED FOREIGN KEY (REPLNO, TGTDBNO) REFERENCES REPL$SUBSCRIBEDDB)^

CREATE TABLE REPL$KEYWORDS (
  DBMS INTEGER NOT NULL,
  WORD VARCHAR(31) CHARACTER SET NONE NOT NULL)^

INSERT INTO REPL$KEYWORDS VALUES (0,'ACTION')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ACTIVE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ADD')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ADMIN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'AFTER')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ALL')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ALTER')^
INSERT INTO REPL$KEYWORDS VALUES (0,'AND')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ANY')^
INSERT INTO REPL$KEYWORDS VALUES (0,'AS')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ASC')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ASCENDING')^
INSERT INTO REPL$KEYWORDS VALUES (0,'AT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'AUTO')^
INSERT INTO REPL$KEYWORDS VALUES (0,'AUTODDL')^
INSERT INTO REPL$KEYWORDS VALUES (0,'AVG')^
INSERT INTO REPL$KEYWORDS VALUES (0,'BASED')^
INSERT INTO REPL$KEYWORDS VALUES (0,'BASENAME')^
INSERT INTO REPL$KEYWORDS VALUES (0,'BASE_NAME')^
INSERT INTO REPL$KEYWORDS VALUES (0,'BEFORE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'BEGIN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'BETWEEN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'BLOB')^
INSERT INTO REPL$KEYWORDS VALUES (0,'BLOBEDIT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'BUFFER')^
INSERT INTO REPL$KEYWORDS VALUES (0,'BY')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CACHE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CASCADE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CAST')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CHAR')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CHARACTER')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CHARACTER_LENGTH')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CHAR_LENGTH')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CHECK')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CHECK_POINT_LEN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CHECK_POINT_LENGTH')^
INSERT INTO REPL$KEYWORDS VALUES (0,'COLLATE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'COLLATION')^
INSERT INTO REPL$KEYWORDS VALUES (0,'COLUMN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'COMMIT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'COMMITTED')^
INSERT INTO REPL$KEYWORDS VALUES (0,'COMPILETIME')^
INSERT INTO REPL$KEYWORDS VALUES (0,'COMPUTED')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CLOSE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CONDITIONAL')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CONNECT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CONSTRAINT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CONTAINING')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CONTINUE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'COUNT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CREATE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CSTRING')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CURRENT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CURRENT_DATE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CURRENT_TIME')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CURRENT_TIMESTAMP')^
INSERT INTO REPL$KEYWORDS VALUES (0,'CURSOR')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DATABASE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DATE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DAY')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DB_KEY')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DEBUG')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DEC')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DECIMAL')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DECLARE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DEFAULT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DELETE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DESC')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DESCENDING')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DESCRIBE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DESCRIPTOR')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DISCONNECT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DISPLAY')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DISTINCT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DO')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DOMAIN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DOUBLE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'DROP')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ECHO')^
INSERT INTO REPL$KEYWORDS VALUES (0,'EDIT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ELSE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'END')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ENTRY_POINT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ESCAPE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'EVENT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'EXCEPTION')^
INSERT INTO REPL$KEYWORDS VALUES (0,'EXECUTE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'EXISTS')^
INSERT INTO REPL$KEYWORDS VALUES (0,'EXIT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'EXTERN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'EXTERNAL')^
INSERT INTO REPL$KEYWORDS VALUES (0,'EXTRACT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'FETCH')^
INSERT INTO REPL$KEYWORDS VALUES (0,'FILE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'FILTER')^
INSERT INTO REPL$KEYWORDS VALUES (0,'FLOAT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'FOR')^
INSERT INTO REPL$KEYWORDS VALUES (0,'FOREIGN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'FOUND')^
INSERT INTO REPL$KEYWORDS VALUES (0,'FREE_IT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'FROM')^
INSERT INTO REPL$KEYWORDS VALUES (0,'FULL')^
INSERT INTO REPL$KEYWORDS VALUES (0,'FUNCTION')^
INSERT INTO REPL$KEYWORDS VALUES (0,'GDSCODE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'GENERATOR')^
INSERT INTO REPL$KEYWORDS VALUES (0,'GEN_ID')^
INSERT INTO REPL$KEYWORDS VALUES (0,'GLOBAL')^
INSERT INTO REPL$KEYWORDS VALUES (0,'GOTO')^
INSERT INTO REPL$KEYWORDS VALUES (0,'GRANT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'GROUP')^
INSERT INTO REPL$KEYWORDS VALUES (0,'GROUP_COMMIT_WAIT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'GROUP_COMMIT_WAIT_TIME')^
INSERT INTO REPL$KEYWORDS VALUES (0,'HAVING')^
INSERT INTO REPL$KEYWORDS VALUES (0,'HELP')^
INSERT INTO REPL$KEYWORDS VALUES (0,'HOUR')^
INSERT INTO REPL$KEYWORDS VALUES (0,'IF')^
INSERT INTO REPL$KEYWORDS VALUES (0,'IMMEDIATE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'IN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'INACTIVE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'INDEX')^
INSERT INTO REPL$KEYWORDS VALUES (0,'INDICATOR')^
INSERT INTO REPL$KEYWORDS VALUES (0,'INIT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'INNER')^
INSERT INTO REPL$KEYWORDS VALUES (0,'INPUT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'INPUT_TYPE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'INSERT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'INT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'INTEGER')^
INSERT INTO REPL$KEYWORDS VALUES (0,'INTO')^
INSERT INTO REPL$KEYWORDS VALUES (0,'IS')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ISOLATION')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ISQL')^
INSERT INTO REPL$KEYWORDS VALUES (0,'JOIN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'KEY')^
INSERT INTO REPL$KEYWORDS VALUES (0,'LC_MESSAGES')^
INSERT INTO REPL$KEYWORDS VALUES (0,'LC_TYPE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'LEFT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'LENGTH')^
INSERT INTO REPL$KEYWORDS VALUES (0,'LEV')^
INSERT INTO REPL$KEYWORDS VALUES (0,'LEVEL')^
INSERT INTO REPL$KEYWORDS VALUES (0,'LIKE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'LOGFILE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'LOG_BUFFER_SIZE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'LOG_BUF_SIZE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'LONG')^
INSERT INTO REPL$KEYWORDS VALUES (0,'MANUAL')^
INSERT INTO REPL$KEYWORDS VALUES (0,'MAX')^
INSERT INTO REPL$KEYWORDS VALUES (0,'MAXIMUM')^
INSERT INTO REPL$KEYWORDS VALUES (0,'MAXIMUM_SEGMENT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'MAX_SEGMENT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'MERGE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'MESSAGE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'MIN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'MINIMUM')^
INSERT INTO REPL$KEYWORDS VALUES (0,'MINUTE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'MODULE_NAME')^
INSERT INTO REPL$KEYWORDS VALUES (0,'MONTH')^
INSERT INTO REPL$KEYWORDS VALUES (0,'NAMES')^
INSERT INTO REPL$KEYWORDS VALUES (0,'NATIONAL')^
INSERT INTO REPL$KEYWORDS VALUES (0,'NATURAL')^
INSERT INTO REPL$KEYWORDS VALUES (0,'NCHAR')^
INSERT INTO REPL$KEYWORDS VALUES (0,'NO')^
INSERT INTO REPL$KEYWORDS VALUES (0,'NOAUTO')^
INSERT INTO REPL$KEYWORDS VALUES (0,'NOT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'NULL')^
INSERT INTO REPL$KEYWORDS VALUES (0,'NUMERIC')^
INSERT INTO REPL$KEYWORDS VALUES (0,'NUM_LOG_BUFS')^
INSERT INTO REPL$KEYWORDS VALUES (0,'NUM_LOG_BUFFERS')^
INSERT INTO REPL$KEYWORDS VALUES (0,'OCTET_LENGTH')^
INSERT INTO REPL$KEYWORDS VALUES (0,'OF')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ON')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ONLY')^
INSERT INTO REPL$KEYWORDS VALUES (0,'OPEN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'OPTION')^
INSERT INTO REPL$KEYWORDS VALUES (0,'OR')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ORDER')^
INSERT INTO REPL$KEYWORDS VALUES (0,'OUTER')^
INSERT INTO REPL$KEYWORDS VALUES (0,'OUTPUT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'OUTPUT_TYPE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'OVERFLOW')^
INSERT INTO REPL$KEYWORDS VALUES (0,'PAGE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'PAGELENGTH')^
INSERT INTO REPL$KEYWORDS VALUES (0,'PAGES')^
INSERT INTO REPL$KEYWORDS VALUES (0,'PAGE_SIZE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'PARAMETER')^
INSERT INTO REPL$KEYWORDS VALUES (0,'PASSWORD')^
INSERT INTO REPL$KEYWORDS VALUES (0,'PLAN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'POSITION')^
INSERT INTO REPL$KEYWORDS VALUES (0,'POST_EVENT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'PRECISION')^
INSERT INTO REPL$KEYWORDS VALUES (0,'PREPARE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'PRIMARY')^
INSERT INTO REPL$KEYWORDS VALUES (0,'PRIVILEGES')^
INSERT INTO REPL$KEYWORDS VALUES (0,'PROCEDURE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'PROTECTED')^
INSERT INTO REPL$KEYWORDS VALUES (0,'PUBLIC')^
INSERT INTO REPL$KEYWORDS VALUES (0,'QUIT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'RAW_PARTITIONS')^
INSERT INTO REPL$KEYWORDS VALUES (0,'RDB$DB_KEY')^
INSERT INTO REPL$KEYWORDS VALUES (0,'READ')^
INSERT INTO REPL$KEYWORDS VALUES (0,'REAL')^
INSERT INTO REPL$KEYWORDS VALUES (0,'RECORD_VERSION')^
INSERT INTO REPL$KEYWORDS VALUES (0,'REFERENCES')^
INSERT INTO REPL$KEYWORDS VALUES (0,'RELEASE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'RESERV')^
INSERT INTO REPL$KEYWORDS VALUES (0,'RESERVING')^
INSERT INTO REPL$KEYWORDS VALUES (0,'RESTRICT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'RETAIN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'RETURN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'RETURNING_VALUES')^
INSERT INTO REPL$KEYWORDS VALUES (0,'RETURNS')^
INSERT INTO REPL$KEYWORDS VALUES (0,'REVOKE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'RIGHT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ROLE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ROLLBACK')^
INSERT INTO REPL$KEYWORDS VALUES (0,'RUNTIME')^
INSERT INTO REPL$KEYWORDS VALUES (0,'ROWS')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SAVEPOINT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SCHEMA')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SECOND')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SEGMENT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SELECT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SET')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SHADOW')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SHARED')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SHELL')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SHOW')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SINGULAR')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SIZE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SMALLINT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SNAPSHOT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SOME')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SORT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SQLCODE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SQLERROR')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SQLWARNING')^
INSERT INTO REPL$KEYWORDS VALUES (0,'STABILITY')^
INSERT INTO REPL$KEYWORDS VALUES (0,'STARTING')^
INSERT INTO REPL$KEYWORDS VALUES (0,'STARTS')^
INSERT INTO REPL$KEYWORDS VALUES (0,'START')^
INSERT INTO REPL$KEYWORDS VALUES (0,'STATEMENT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'STATIC')^
INSERT INTO REPL$KEYWORDS VALUES (0,'STATISTICS')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SUB_TYPE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SUM')^
INSERT INTO REPL$KEYWORDS VALUES (0,'SUSPEND')^
INSERT INTO REPL$KEYWORDS VALUES (0,'TABLE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'TERMINATOR')^
INSERT INTO REPL$KEYWORDS VALUES (0,'THEN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'TIME')^
INSERT INTO REPL$KEYWORDS VALUES (0,'TIMESTAMP')^
INSERT INTO REPL$KEYWORDS VALUES (0,'TO')^
INSERT INTO REPL$KEYWORDS VALUES (0,'TRANSACTION')^
INSERT INTO REPL$KEYWORDS VALUES (0,'TRANSLATE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'TRANSLATION')^
INSERT INTO REPL$KEYWORDS VALUES (0,'TRIGGER')^
INSERT INTO REPL$KEYWORDS VALUES (0,'TRIM')^
INSERT INTO REPL$KEYWORDS VALUES (0,'TYPE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'UNCOMMITTED')^
INSERT INTO REPL$KEYWORDS VALUES (0,'UNION')^
INSERT INTO REPL$KEYWORDS VALUES (0,'UNIQUE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'UPDATE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'UPPER')^
INSERT INTO REPL$KEYWORDS VALUES (0,'USER')^
INSERT INTO REPL$KEYWORDS VALUES (0,'USING')^
INSERT INTO REPL$KEYWORDS VALUES (0,'VALUE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'VALUES')^
INSERT INTO REPL$KEYWORDS VALUES (0,'VARCHAR')^
INSERT INTO REPL$KEYWORDS VALUES (0,'VARIABLE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'VARYING')^
INSERT INTO REPL$KEYWORDS VALUES (0,'VERSION')^
INSERT INTO REPL$KEYWORDS VALUES (0,'VIEW')^
INSERT INTO REPL$KEYWORDS VALUES (0,'WAIT')^
INSERT INTO REPL$KEYWORDS VALUES (0,'WEEKDAY')^
INSERT INTO REPL$KEYWORDS VALUES (0,'WHEN')^
INSERT INTO REPL$KEYWORDS VALUES (0,'WHENEVER')^
INSERT INTO REPL$KEYWORDS VALUES (0,'WHERE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'WHILE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'WITH')^
INSERT INTO REPL$KEYWORDS VALUES (0,'WORK')^
INSERT INTO REPL$KEYWORDS VALUES (0,'WRITE')^
INSERT INTO REPL$KEYWORDS VALUES (0,'YEAR')^
INSERT INTO REPL$KEYWORDS VALUES (0,'YEARDAY')^

INSERT INTO REPL$KEYWORDS VALUES (1,'ACCESS')^
INSERT INTO REPL$KEYWORDS VALUES (1,'ADD')^
INSERT INTO REPL$KEYWORDS VALUES (1,'ALL')^
INSERT INTO REPL$KEYWORDS VALUES (1,'ALTER')^
INSERT INTO REPL$KEYWORDS VALUES (1,'AND')^
INSERT INTO REPL$KEYWORDS VALUES (1,'ANY')^
INSERT INTO REPL$KEYWORDS VALUES (1,'AS')^
INSERT INTO REPL$KEYWORDS VALUES (1,'ASC')^
INSERT INTO REPL$KEYWORDS VALUES (1,'AUDIT')^
INSERT INTO REPL$KEYWORDS VALUES (1,'BETWEEN')^
INSERT INTO REPL$KEYWORDS VALUES (1,'BY')^
INSERT INTO REPL$KEYWORDS VALUES (1,'CHAR')^
INSERT INTO REPL$KEYWORDS VALUES (1,'CHECK')^
INSERT INTO REPL$KEYWORDS VALUES (1,'CLUSTER')^
INSERT INTO REPL$KEYWORDS VALUES (1,'COLUMN')^
INSERT INTO REPL$KEYWORDS VALUES (1,'COMMENT')^
INSERT INTO REPL$KEYWORDS VALUES (1,'COMPRESS')^
INSERT INTO REPL$KEYWORDS VALUES (1,'CONNECT')^
INSERT INTO REPL$KEYWORDS VALUES (1,'CREATE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'CURRENT')^
INSERT INTO REPL$KEYWORDS VALUES (1,'DATE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'DECIMAL')^
INSERT INTO REPL$KEYWORDS VALUES (1,'DEFAULT')^
INSERT INTO REPL$KEYWORDS VALUES (1,'DELETE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'DESC')^
INSERT INTO REPL$KEYWORDS VALUES (1,'DISTINCT')^
INSERT INTO REPL$KEYWORDS VALUES (1,'DROP')^
INSERT INTO REPL$KEYWORDS VALUES (1,'ELSE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'EXCLUSIVE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'EXISTS')^
INSERT INTO REPL$KEYWORDS VALUES (1,'FILE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'FLOAT')^
INSERT INTO REPL$KEYWORDS VALUES (1,'FOR')^
INSERT INTO REPL$KEYWORDS VALUES (1,'FROM')^
INSERT INTO REPL$KEYWORDS VALUES (1,'GRANT')^
INSERT INTO REPL$KEYWORDS VALUES (1,'GROUP')^
INSERT INTO REPL$KEYWORDS VALUES (1,'HAVING')^
INSERT INTO REPL$KEYWORDS VALUES (1,'IDENTIFIED')^
INSERT INTO REPL$KEYWORDS VALUES (1,'IMMEDIATE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'IN')^
INSERT INTO REPL$KEYWORDS VALUES (1,'INCREMENT')^
INSERT INTO REPL$KEYWORDS VALUES (1,'INDEX')^
INSERT INTO REPL$KEYWORDS VALUES (1,'INITIAL')^
INSERT INTO REPL$KEYWORDS VALUES (1,'INSERT')^
INSERT INTO REPL$KEYWORDS VALUES (1,'INTEGER')^
INSERT INTO REPL$KEYWORDS VALUES (1,'INTERSECT')^
INSERT INTO REPL$KEYWORDS VALUES (1,'INTO')^
INSERT INTO REPL$KEYWORDS VALUES (1,'IS')^
INSERT INTO REPL$KEYWORDS VALUES (1,'LEVEL')^
INSERT INTO REPL$KEYWORDS VALUES (1,'LIKE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'LOCK')^
INSERT INTO REPL$KEYWORDS VALUES (1,'LONG')^
INSERT INTO REPL$KEYWORDS VALUES (1,'MAXEXTENTS')^
INSERT INTO REPL$KEYWORDS VALUES (1,'MINUS')^
INSERT INTO REPL$KEYWORDS VALUES (1,'MLSLABEL')^
INSERT INTO REPL$KEYWORDS VALUES (1,'MODE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'MODIFY')^
INSERT INTO REPL$KEYWORDS VALUES (1,'NOAUDIT')^
INSERT INTO REPL$KEYWORDS VALUES (1,'NOCOMPRESS')^
INSERT INTO REPL$KEYWORDS VALUES (1,'NOT')^
INSERT INTO REPL$KEYWORDS VALUES (1,'NOWAIT')^
INSERT INTO REPL$KEYWORDS VALUES (1,'NULL')^
INSERT INTO REPL$KEYWORDS VALUES (1,'NUMBER')^
INSERT INTO REPL$KEYWORDS VALUES (1,'OF')^
INSERT INTO REPL$KEYWORDS VALUES (1,'OFFLINE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'ON')^
INSERT INTO REPL$KEYWORDS VALUES (1,'ONLINE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'OPTION')^
INSERT INTO REPL$KEYWORDS VALUES (1,'OR')^
INSERT INTO REPL$KEYWORDS VALUES (1,'ORDER')^
INSERT INTO REPL$KEYWORDS VALUES (1,'PCTFREE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'PRIOR')^
INSERT INTO REPL$KEYWORDS VALUES (1,'PRIVILEGES')^
INSERT INTO REPL$KEYWORDS VALUES (1,'PUBLIC')^
INSERT INTO REPL$KEYWORDS VALUES (1,'RAW')^
INSERT INTO REPL$KEYWORDS VALUES (1,'RENAME')^
INSERT INTO REPL$KEYWORDS VALUES (1,'RESOURCE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'REVOKE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'ROW')^
INSERT INTO REPL$KEYWORDS VALUES (1,'ROWID')^
INSERT INTO REPL$KEYWORDS VALUES (1,'ROWNUM')^
INSERT INTO REPL$KEYWORDS VALUES (1,'ROWS')^
INSERT INTO REPL$KEYWORDS VALUES (1,'SELECT')^
INSERT INTO REPL$KEYWORDS VALUES (1,'SESSION')^
INSERT INTO REPL$KEYWORDS VALUES (1,'SET')^
INSERT INTO REPL$KEYWORDS VALUES (1,'SHARE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'SIZE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'SMALLINT')^
INSERT INTO REPL$KEYWORDS VALUES (1,'START')^
INSERT INTO REPL$KEYWORDS VALUES (1,'SUCCESSFUL')^
INSERT INTO REPL$KEYWORDS VALUES (1,'SYNONYM')^
INSERT INTO REPL$KEYWORDS VALUES (1,'SYSDATE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'TABLE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'THEN')^
INSERT INTO REPL$KEYWORDS VALUES (1,'TO')^
INSERT INTO REPL$KEYWORDS VALUES (1,'TRIGGER')^
INSERT INTO REPL$KEYWORDS VALUES (1,'UID')^
INSERT INTO REPL$KEYWORDS VALUES (1,'UNION')^
INSERT INTO REPL$KEYWORDS VALUES (1,'UNIQUE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'UPDATE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'USER')^
INSERT INTO REPL$KEYWORDS VALUES (1,'VALIDATE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'VALUES')^
INSERT INTO REPL$KEYWORDS VALUES (1,'VARCHAR')^
INSERT INTO REPL$KEYWORDS VALUES (1,'VARCHAR2')^
INSERT INTO REPL$KEYWORDS VALUES (1,'VIEW')^
INSERT INTO REPL$KEYWORDS VALUES (1,'WHENEVER')^
INSERT INTO REPL$KEYWORDS VALUES (1,'WHERE')^
INSERT INTO REPL$KEYWORDS VALUES (1,'WITH')^

INSERT INTO REPL$KEYWORDS VALUES (3,'ACTION')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ACTIVE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ADD')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ADMIN')^
INSERT INTO REPL$KEYWORDS VALUES (3,'AFTER')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ALL')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ALTER')^
INSERT INTO REPL$KEYWORDS VALUES (3,'AND')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ANY')^
INSERT INTO REPL$KEYWORDS VALUES (3,'AS')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ASC')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ASCENDING')^
INSERT INTO REPL$KEYWORDS VALUES (3,'AT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'AUTO')^
INSERT INTO REPL$KEYWORDS VALUES (3,'AVG')^
INSERT INTO REPL$KEYWORDS VALUES (3,'BASE_NAME')^
INSERT INTO REPL$KEYWORDS VALUES (3,'BEFORE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'BEGIN')^
INSERT INTO REPL$KEYWORDS VALUES (3,'BETWEEN')^
INSERT INTO REPL$KEYWORDS VALUES (3,'BIGINT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'BLOB')^
INSERT INTO REPL$KEYWORDS VALUES (3,'BLOCK')^
INSERT INTO REPL$KEYWORDS VALUES (3,'BREAK')^
INSERT INTO REPL$KEYWORDS VALUES (3,'BY')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CACHE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CASCADE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CASE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CAST')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CHAR')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CHAR_LENGTH')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CHARACTER')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CHARACTER_LENGTH')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CHECK')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CHECK_POINT_LENGTH')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CLOSE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'COALESCE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'COLLATE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'COLUMN')^
INSERT INTO REPL$KEYWORDS VALUES (3,'COMMIT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'COMMITTED')^
INSERT INTO REPL$KEYWORDS VALUES (3,'COMPUTED')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CONDITIONAL')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CONNECT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CONSTRAINT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CONTAINING')^
INSERT INTO REPL$KEYWORDS VALUES (3,'COUNT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CREATE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CROSS')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CSTRING')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CURRENT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CURRENT_CONNECTION')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CURRENT_DATE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CURRENT_ROLE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CURRENT_TIME')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CURRENT_TIMESTAMP')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CURRENT_TRANSACTION')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CURRENT_USER')^
INSERT INTO REPL$KEYWORDS VALUES (3,'CURSOR')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DATABASE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DATE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DAY')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DEBUG')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DEC')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DECIMAL')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DECLARE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DEFAULT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DELETE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DELETING')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DESC')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DESCENDING')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DESCRIPTOR')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DIFFERENCE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DISCONNECT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DISTINCT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DO')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DOMAIN')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DOUBLE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'DROP')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ELSE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'END')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ENTRY_POINT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ESCAPE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'EXCEPTION')^
INSERT INTO REPL$KEYWORDS VALUES (3,'EXECUTE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'EXISTS')^
INSERT INTO REPL$KEYWORDS VALUES (3,'EXIT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'EXTERNAL')^
INSERT INTO REPL$KEYWORDS VALUES (3,'EXTRACT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'FETCH')^
INSERT INTO REPL$KEYWORDS VALUES (3,'FILE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'FILTER')^
INSERT INTO REPL$KEYWORDS VALUES (3,'FIRST')^
INSERT INTO REPL$KEYWORDS VALUES (3,'FLOAT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'FOR')^
INSERT INTO REPL$KEYWORDS VALUES (3,'FOREIGN')^
INSERT INTO REPL$KEYWORDS VALUES (3,'FREE_IT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'FROM')^
INSERT INTO REPL$KEYWORDS VALUES (3,'FULL')^
INSERT INTO REPL$KEYWORDS VALUES (3,'FUNCTION')^
INSERT INTO REPL$KEYWORDS VALUES (3,'GDSCODE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'GENERATOR')^
INSERT INTO REPL$KEYWORDS VALUES (3,'GEN_ID')^
INSERT INTO REPL$KEYWORDS VALUES (3,'GLOBAL')^
INSERT INTO REPL$KEYWORDS VALUES (3,'GRANT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'GROUP')^
INSERT INTO REPL$KEYWORDS VALUES (3,'GROUP_COMMIT_WAIT_TIME')^
INSERT INTO REPL$KEYWORDS VALUES (3,'HAVING')^
INSERT INTO REPL$KEYWORDS VALUES (3,'HOUR')^
INSERT INTO REPL$KEYWORDS VALUES (3,'IF')^
INSERT INTO REPL$KEYWORDS VALUES (3,'IIF')^
INSERT INTO REPL$KEYWORDS VALUES (3,'IN')^
INSERT INTO REPL$KEYWORDS VALUES (3,'INACTIVE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'INDEX')^
INSERT INTO REPL$KEYWORDS VALUES (3,'INNER')^
INSERT INTO REPL$KEYWORDS VALUES (3,'INPUT_TYPE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'INSENSITIVE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'INSERT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'INSERTING')^
INSERT INTO REPL$KEYWORDS VALUES (3,'INT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'INTEGER')^
INSERT INTO REPL$KEYWORDS VALUES (3,'INTO')^
INSERT INTO REPL$KEYWORDS VALUES (3,'IS')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ISOLATION')^
INSERT INTO REPL$KEYWORDS VALUES (3,'JOIN')^
INSERT INTO REPL$KEYWORDS VALUES (3,'KEY')^
INSERT INTO REPL$KEYWORDS VALUES (3,'LAST')^
INSERT INTO REPL$KEYWORDS VALUES (3,'LEADING')^
INSERT INTO REPL$KEYWORDS VALUES (3,'LEAVE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'LEFT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'LENGTH')^
INSERT INTO REPL$KEYWORDS VALUES (3,'LEVEL')^
INSERT INTO REPL$KEYWORDS VALUES (3,'LIKE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'LIST')^
INSERT INTO REPL$KEYWORDS VALUES (3,'LOGFILE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'LOG_BUFFER_SIZE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'LONG')^
INSERT INTO REPL$KEYWORDS VALUES (3,'LOWER')^
INSERT INTO REPL$KEYWORDS VALUES (3,'MANUAL')^
INSERT INTO REPL$KEYWORDS VALUES (3,'MATCHED')^
INSERT INTO REPL$KEYWORDS VALUES (3,'MATCHING')^
INSERT INTO REPL$KEYWORDS VALUES (3,'MAX')^
INSERT INTO REPL$KEYWORDS VALUES (3,'MAXIMUM_SEGMENT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'MERGE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'MESSAGE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'MIN')^
INSERT INTO REPL$KEYWORDS VALUES (3,'MINUTE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'MODULE_NAME')^
INSERT INTO REPL$KEYWORDS VALUES (3,'MONTH')^
INSERT INTO REPL$KEYWORDS VALUES (3,'NAMES')^
INSERT INTO REPL$KEYWORDS VALUES (3,'NATIONAL')^
INSERT INTO REPL$KEYWORDS VALUES (3,'NATURAL')^
INSERT INTO REPL$KEYWORDS VALUES (3,'NCHAR')^
INSERT INTO REPL$KEYWORDS VALUES (3,'NEXT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'NO')^
INSERT INTO REPL$KEYWORDS VALUES (3,'NOT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'NULLIF')^
INSERT INTO REPL$KEYWORDS VALUES (3,'NULL')^
INSERT INTO REPL$KEYWORDS VALUES (3,'NULLS')^
INSERT INTO REPL$KEYWORDS VALUES (3,'LOCK')^
INSERT INTO REPL$KEYWORDS VALUES (3,'NUMERIC')^
INSERT INTO REPL$KEYWORDS VALUES (3,'NUM_LOG_BUFFERS')^
INSERT INTO REPL$KEYWORDS VALUES (3,'OCTET_LENGTH')^
INSERT INTO REPL$KEYWORDS VALUES (3,'OF')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ON')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ONLY')^
INSERT INTO REPL$KEYWORDS VALUES (3,'OPEN')^
INSERT INTO REPL$KEYWORDS VALUES (3,'OPTION')^
INSERT INTO REPL$KEYWORDS VALUES (3,'OR')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ORDER')^
INSERT INTO REPL$KEYWORDS VALUES (3,'OUTER')^
INSERT INTO REPL$KEYWORDS VALUES (3,'OUTPUT_TYPE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'OVERFLOW')^
INSERT INTO REPL$KEYWORDS VALUES (3,'PAGE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'PAGES')^
INSERT INTO REPL$KEYWORDS VALUES (3,'PAGE_SIZE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'PARAMETER')^
INSERT INTO REPL$KEYWORDS VALUES (3,'PASSWORD')^
INSERT INTO REPL$KEYWORDS VALUES (3,'PLAN')^
INSERT INTO REPL$KEYWORDS VALUES (3,'POSITION')^
INSERT INTO REPL$KEYWORDS VALUES (3,'POST_EVENT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'PRECISION')^
INSERT INTO REPL$KEYWORDS VALUES (3,'PRESERVE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'PRIMARY')^
INSERT INTO REPL$KEYWORDS VALUES (3,'PRIVILEGES')^
INSERT INTO REPL$KEYWORDS VALUES (3,'PROCEDURE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'PROTECTED')^
INSERT INTO REPL$KEYWORDS VALUES (3,'RAW_PARTITIONS')^
INSERT INTO REPL$KEYWORDS VALUES (3,'RDB$DB_KEY')^
INSERT INTO REPL$KEYWORDS VALUES (3,'READ')^
INSERT INTO REPL$KEYWORDS VALUES (3,'REAL')^
INSERT INTO REPL$KEYWORDS VALUES (3,'RECORD_VERSION')^
INSERT INTO REPL$KEYWORDS VALUES (3,'RECREATE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'RECURSIVE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'REFERENCES')^
INSERT INTO REPL$KEYWORDS VALUES (3,'RELEASE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'RESERV')^
INSERT INTO REPL$KEYWORDS VALUES (3,'RESERVING')^
INSERT INTO REPL$KEYWORDS VALUES (3,'RESTART')^
INSERT INTO REPL$KEYWORDS VALUES (3,'RESTRICT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'RETAIN')^
INSERT INTO REPL$KEYWORDS VALUES (3,'RETURNING_VALUES')^
INSERT INTO REPL$KEYWORDS VALUES (3,'RETURNS')^
INSERT INTO REPL$KEYWORDS VALUES (3,'REVOKE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'RIGHT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ROLE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ROLLBACK')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ROW_COUNT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'ROWS')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SAVEPOINT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SCALAR_ARRAY')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SCHEMA')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SECOND')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SEGMENT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SELECT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SENSITIVE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SEQUENCE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SET')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SHADOW')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SHARED')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SINGULAR')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SIZE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SKIP')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SMALLINT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SNAPSHOT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SOME')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SORT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SQLCODE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'STABILITY')^
INSERT INTO REPL$KEYWORDS VALUES (3,'STARTING')^
INSERT INTO REPL$KEYWORDS VALUES (3,'STARTS')^
INSERT INTO REPL$KEYWORDS VALUES (3,'START')^
INSERT INTO REPL$KEYWORDS VALUES (3,'STATEMENT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'STATISTICS')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SUBSTRING')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SUB_TYPE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SUM')^
INSERT INTO REPL$KEYWORDS VALUES (3,'SUSPEND')^
INSERT INTO REPL$KEYWORDS VALUES (3,'TABLE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'TEMPORARY')^
INSERT INTO REPL$KEYWORDS VALUES (3,'THEN')^
INSERT INTO REPL$KEYWORDS VALUES (3,'TIME')^
INSERT INTO REPL$KEYWORDS VALUES (3,'TIMESTAMP')^
INSERT INTO REPL$KEYWORDS VALUES (3,'TO')^
INSERT INTO REPL$KEYWORDS VALUES (3,'TRAILING')^
INSERT INTO REPL$KEYWORDS VALUES (3,'TRANSACTION')^
INSERT INTO REPL$KEYWORDS VALUES (3,'TRIGGER')^
INSERT INTO REPL$KEYWORDS VALUES (3,'TRIM')^
INSERT INTO REPL$KEYWORDS VALUES (3,'TYPE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'UNCOMMITTED')^
INSERT INTO REPL$KEYWORDS VALUES (3,'UNION')^
INSERT INTO REPL$KEYWORDS VALUES (3,'UNIQUE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'UPDATE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'UPDATING')^
INSERT INTO REPL$KEYWORDS VALUES (3,'UPPER')^
INSERT INTO REPL$KEYWORDS VALUES (3,'USER')^
INSERT INTO REPL$KEYWORDS VALUES (3,'USING')^
INSERT INTO REPL$KEYWORDS VALUES (3,'VALUE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'VALUES')^
INSERT INTO REPL$KEYWORDS VALUES (3,'VARCHAR')^
INSERT INTO REPL$KEYWORDS VALUES (3,'VARIABLE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'VARYING')^
INSERT INTO REPL$KEYWORDS VALUES (3,'VIEW')^
INSERT INTO REPL$KEYWORDS VALUES (3,'WAIT')^
INSERT INTO REPL$KEYWORDS VALUES (3,'WEEKDAY')^
INSERT INTO REPL$KEYWORDS VALUES (3,'WHEN')^
INSERT INTO REPL$KEYWORDS VALUES (3,'WHERE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'WHILE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'WITH')^
INSERT INTO REPL$KEYWORDS VALUES (3,'WORK')^
INSERT INTO REPL$KEYWORDS VALUES (3,'WRITE')^
INSERT INTO REPL$KEYWORDS VALUES (3,'YEAR')^
INSERT INTO REPL$KEYWORDS VALUES (3,'YEARDAY')^

ALTER TABLE REPL$SUBSCRIBEDDB ADD CONSTRAINT REPL$C_SUBSCRIBED_DB FOREIGN KEY (DBNO) REFERENCES REPL$DATABASES(DBNO)^
ALTER TABLE REPL$SUBSCRIBEDDB ADD CONSTRAINT REPL$C_SUBSCRIBED_SCHEMATA FOREIGN KEY (REPLNO) REFERENCES REPL$SCHEMATA(REPLNO)^
ALTER TABLE REPL$RELATIONS ADD CONSTRAINT REPL$C_RELATION_SUBSCRIBED FOREIGN KEY (REPLNO, TGTDBNO) REFERENCES REPL$SUBSCRIBEDDB^
ALTER TABLE REPL$KEYFIELDS ADD CONSTRAINT REPL$C_KEYS_RELATIONS FOREIGN KEY (REPLNO, TGTDBNO, RELATIONNO) REFERENCES REPL$RELATIONS(REPLNO, TGTDBNO, RELATIONNO)^
ALTER TABLE REPL$DATAFIELDS ADD CONSTRAINT REPL$C_FIELDS_RELATIONS FOREIGN KEY (REPLNO, TGTDBNO, RELATIONNO) REFERENCES REPL$RELATIONS(REPLNO, TGTDBNO, RELATIONNO)^

CREATE GENERATOR REPL$GEN^
CREATE GENERATOR REPL$DBGEN^
CREATE GENERATOR REPL$RELATIONGEN^
CREATE GENERATOR REPL$SCHED_GEN^

CREATE PROCEDURE REPL$NOTIFY(THETYPE INTEGER)
AS
BEGIN
  IF (THETYPE = 1) THEN
    POST_EVENT 'RELOAD';
  ELSE IF (THETYPE = 2) THEN
    POST_EVENT 'REPLNOW';
  ELSE IF (THETYPE = 4) THEN
    POST_EVENT 'EXITNOW';
  ELSE IF (THETYPE = 7) THEN
    POST_EVENT 'REPLSTATS';
  ELSE IF (THETYPE = 8) THEN
    POST_EVENT 'REPLERROR';
END^

CREATE PROCEDURE REPL$CLONETARGET (REPLNO INTEGER, TGTDBNO INTEGER, NEWREPLNO INTEGER, NEWTGTDBNO INTEGER)
AS
  DECLARE VARIABLE OLDRLNNO INTEGER;
  DECLARE VARIABLE NEWRLNNO INTEGER;
  DECLARE VARIABLE NEWSORTKEY INTEGER;
BEGIN
  if (NOT EXISTS(select * from REPL$subscribeddb where replno = :newreplno and dbno = :newtgtdbno)) then 
  begin
    NEWSORTKEY = 0;
    select MAX(SORT_KEY)+1 FROM REPL$SUBSCRIBEDDB WHERE REPLNO=:NEWREPLNO INTO :NEWSORTKEY;
    insert into REPL$subscribeddb(replno,dbno,username,psword,userrole,UseDefaultLogging,LogFileName,LogToFile,LogToWindow,sort_key)
    select :newreplno,:newtgtdbno,username,psword,userrole,UseDefaultLogging,LogFileName,LogToFile,LogToWindow,:newsortkey from REPL$subscribeddb where replno = :replno and dbno = :tgtdbno;
  end
  FOR SELECT RELATIONNO FROM REPL$RELATIONS WHERE REPLNO = :REPLNO AND TGTDBNO = :TGTDBNO INTO :OLDRLNNO DO 
  BEGIN
    NEWRLNNO = GEN_ID(REPL$RELATIONGEN,1);
    INSERT INTO REPL$RELATIONS (REPLNO,TGTDBNO,RELATIONNO,RELATIONSCHEMA,RELATIONNAME,COMMENTS,DISABLED,TIMEFIELDNAME,CONDITION,TARGETSCHEMA,TARGETNAME,TARGETTYPE,SEP,OPS,SORT_KEY,CONFLICTMETHOD,FKBEHAVIOR)
    SELECT :NEWREPLNO,:NEWTGTDBNO,:NEWRLNNO,RELATIONSCHEMA,RELATIONNAME, COMMENTS, DISABLED, TIMEFIELDNAME, CONDITION, TARGETSCHEMA, TARGETNAME, TARGETTYPE, SEP, OPS, SORT_KEY,CONFLICTMETHOD,FKBEHAVIOR FROM REPL$RELATIONS
      WHERE REPLNO = :REPLNO AND TGTDBNO = :TGTDBNO AND RELATIONNO = :OLDRLNNO;
    INSERT INTO REPL$KEYFIELDS (REPLNO, RELATIONNO, TGTDBNO, FIELDNO, FIELDNAME, TARGETNAME)
    SELECT :NEWREPLNO , :NEWRLNNO , :NEWTGTDBNO, FIELDNO, FIELDNAME, TARGETNAME FROM REPL$KEYFIELDS
      WHERE REPLNO = :REPLNO AND TGTDBNO = :TGTDBNO AND RELATIONNO = :OLDRLNNO;
    INSERT INTO REPL$DATAFIELDS (REPLNO, RELATIONNO, TGTDBNO, FIELDNO, FIELDNAME, TARGETNAME)
    SELECT :NEWREPLNO, :NEWRLNNO, :NEWTGTDBNO, FIELDNO, FIELDNAME, TARGETNAME FROM REPL$DATAFIELDS
      WHERE REPLNO = :REPLNO AND TGTDBNO = :TGTDBNO AND RELATIONNO = :OLDRLNNO;
  END
  INSERT INTO REPL$SEQUENCES (REPLNO,TGTDBNO,SOURCESCHEMA,SOURCENAME,TARGETSCHEMA,TARGETNAME)
    SELECT :NEWREPLNO,:NEWTGTDBNO,SOURCESCHEMA,SOURCENAME,TARGETSCHEMA,TARGETNAME FROM REPL$SEQUENCES
      WHERE REPLNO=:REPLNO AND TGTDBNO=:TGTDBNO;
END^

CREATE TRIGGER REPL$SETREPLNO FOR REPL$SCHEMATA
ACTIVE BEFORE INSERT POSITION 0 
AS 
BEGIN 
  IF (NEW.REPLNO IS NULL) THEN 
     NEW.REPLNO = GEN_ID(REPL$GEN,1); 
END^

CREATE TRIGGER REPL$SETDBNO FOR REPL$DATABASES
ACTIVE BEFORE INSERT POSITION 0 
AS 
BEGIN 
  IF (NEW.DBNO IS NULL) THEN NEW.DBNO = GEN_ID(REPL$DBGEN,1); 
END^

CREATE TRIGGER REPL$SETRELATIONNO FOR REPL$RELATIONS
ACTIVE BEFORE INSERT POSITION 0 
AS 
BEGIN 
  IF (NEW.RELATIONNO IS NULL) THEN 
    NEW.RELATIONNO = GEN_ID(REPL$RELATIONGEN,1);
END^

CREATE TRIGGER REPL$SETSEQENCENO FOR REPL$SEQUENCES
ACTIVE BEFORE INSERT POSITION 0 
AS 
BEGIN 
  IF (NEW.SEQNO IS NULL) THEN 
    NEW.SEQNO = GEN_ID(REPL$RELATIONGEN,1);
END^

CREATE TRIGGER REPL$CASCADEDBDELETE FOR REPL$DATABASES
ACTIVE BEFORE DELETE POSITION 0 
AS BEGIN 
  DELETE FROM REPL$SUBSCRIBEDDB WHERE DBNO = OLD.DBNO; 
  DELETE FROM REPL$SCHEMATA WHERE PUBDBNO = OLD.DBNO;
END^

CREATE TRIGGER REPL$CASCADERELATIONDELETE FOR REPL$RELATIONS
ACTIVE BEFORE DELETE POSITION 0 
AS 
BEGIN 
  DELETE FROM REPL$KEYFIELDS WHERE REPLNO = OLD.REPLNO AND TGTDBNO = OLD.TGTDBNO AND RELATIONNO = OLD.RELATIONNO; 
  DELETE FROM REPL$DATAFIELDS WHERE REPLNO = OLD.REPLNO AND TGTDBNO = OLD.TGTDBNO AND RELATIONNO = OLD.RELATIONNO; 
END^

CREATE TRIGGER REPL$CASCADEPUBLISHEDDELETE FOR REPL$SCHEMATA
ACTIVE BEFORE DELETE POSITION 0 
AS 
BEGIN
 DELETE FROM REPL$RELATIONS WHERE REPLNO=OLD.REPLNO;
 DELETE FROM REPL$SEQUENCES WHERE REPLNO=OLD.REPLNO;
 DELETE FROM REPL$SUBSCRIBEDDB WHERE REPLNO=OLD.REPLNO;
END^

CREATE GENERATOR REPL$LICENSEGEN^

CREATE TABLE REPL$LICENSES (LICENSENO INTEGER NOT NULL CONSTRAINT REPL$LICENSES_PK PRIMARY KEY,LICENSEID VARCHAR(15) CHARACTER SET NONE,LICENSEKEY3 VARCHAR(300) CHARACTER SET NONE NOT NULL)^

CREATE TRIGGER REPL$LICENSEINS FOR REPL$LICENSES BEFORE INSERT 
AS 
BEGIN
 IF(NEW.LICENSENO IS NULL) THEN 
  NEW.LICENSENO = GEN_ID(REPL$LICENSEGEN,1); 
END^

CREATE EXCEPTION REPL$LICENSE 'Evaluation licence cannot be deleted'^

CREATE TRIGGER REPL$LICENSE_DEL FOR REPL$LICENSES ACTIVE BEFORE DELETE POSITION 0 AS BEGIN IF (UPPER(OLD.LICENSEID)='EVAL') THEN EXCEPTION REPL$LICENSE; END^

INSERT INTO REPL$CONFIG(VERSION) VALUES(41)^
SET TERM ;^

-- MasaUDFL: Sorry for that
INPUT ..\..\masa\sql\masaudf\masaudf.sql;
/* $Id: masaudf.sql 52304 2018-05-26 22:21:43Z skopalik $ */
/*
  Encode id into BHD code (add prefix and CRC)
  Useful for BarCode printer or human transfer
  Slavomir Skopalik Elekt Labs s.r.o. (c) 2004, 2005
  skopalik@elektlabs.cz
*/
DECLARE EXTERNAL FUNCTION BHDEncode
        INTEGER
        RETURNS CSTRING(31) FREE_IT
        ENTRY_POINT 'BHDEncode' MODULE_NAME 'masaudf';

DECLARE EXTERNAL FUNCTION BHDDecode
        CSTRING(31)
        RETURNS INTEGER BY VALUE
        ENTRY_POINT 'BHDDecode' MODULE_NAME 'masaudf';

DECLARE EXTERNAL FUNCTION BHDCheck
        CSTRING(31)
        RETURNS INTEGER BY VALUE
        ENTRY_POINT 'BHDCheck' MODULE_NAME 'masaudf';

DECLARE EXTERNAL FUNCTION SSCCCheckDigit
        CSTRING(31) NULL
        RETURNS CSTRING(1) FREE_IT
        ENTRY_POINT 'UDF_SSCCCheckDigit' MODULE_NAME 'masaudf';

DECLARE EXTERNAL FUNCTION EvaluateExpression
        CSTRING(128) NULL,
        DOUBLE PRECISION NULL
        RETURNS DOUBLE PRECISION FREE_IT
        ENTRY_POINT 'UDF_EvaluateExpression' MODULE_NAME 'masaudf';

DECLARE EXTERNAL FUNCTION CustomFormat
        CSTRING(63),                   /* Formule */
        CSTRING(31),                   /* Format  */
        DOUBLE PRECISION               /* Value   */
        RETURNS CSTRING(31) FREE_IT
        ENTRY_POINT 'CustomFormat' MODULE_NAME 'masaudf';

DECLARE EXTERNAL FUNCTION Sleep
	INTEGER NULL
	RETURNS INTEGER BY VALUE
	ENTRY_POINT 'Sleep' MODULE_NAME 'masaudf';

DECLARE EXTERNAL FUNCTION Frac
         DOUBLE PRECISION
         RETURNS DOUBLE PRECISION BY VALUE
         ENTRY_POINT 'Frac' MODULE_NAME 'masaudf';

/*
DECLARE EXTERNAL FUNCTION NowUTC
timestamp
returns parameter 1
entry_point 'getExactTimestampUTC' module_name 'fbudf';
*/        

DECLARE EXTERNAL FUNCTION StringHash
        CSTRING(8190) CHARACTER SET UTF8
        RETURNS INTEGER BY VALUE
        ENTRY_POINT 'StringHash' MODULE_NAME 'masaudf';

DECLARE EXTERNAL FUNCTION LogString
        CSTRING(8190) CHARACTER SET UTF8
        RETURNS INTEGER BY VALUE
        ENTRY_POINT 'LogString' MODULE_NAME 'masaudf';

DECLARE EXTERNAL FUNCTION LogToFile
        CSTRING(8190) CHARACTER SET UTF8
        RETURNS INTEGER BY VALUE
        ENTRY_POINT 'LogToFile' MODULE_NAME 'masaudf';

DECLARE EXTERNAL FUNCTION RandG
	DOUBLE PRECISION,
	DOUBLE PRECISION
	RETURNS DOUBLE PRECISION BY VALUE
	ENTRY_POINT 'RandG' MODULE_NAME 'masaudf';

/* This function generate random value 0 <= x < range */
DECLARE EXTERNAL FUNCTION RandRange
	INTEGER
	RETURNS DOUBLE PRECISION BY VALUE
	ENTRY_POINT 'RandRange' MODULE_NAME 'masaudf';

/* This function setup random generator */
DECLARE EXTERNAL FUNCTION RandSeed
	RETURNS INTEGER BY VALUE
	ENTRY_POINT 'RandSeed' MODULE_NAME 'masaudf';

/* check for NaN float point value */
DECLARE EXTERNAL FUNCTION IsNan
        DOUBLE PRECISION
	RETURNS INTEGER BY VALUE
	ENTRY_POINT 'UDF_IsNan' MODULE_NAME 'masaudf';

/* IBPassword - Encrypt IB/FB password */
DECLARE EXTERNAL FUNCTION IBPassword CSTRING(256)
        RETURNS CSTRING(12) FREE_IT
        ENTRY_POINT 'IBPassword' MODULE_NAME 'masaudf';

/* IBCreateUser - Add user to securoty DB. Password is excepted in plan form (NOT encrypted)
   return:
    -1: if any exception ocour (see error log for details)
     0: succes
     1: user already exists
*/
DECLARE EXTERNAL FUNCTION IBCreateUser
        CSTRING(256),   /* User_Name */
        CSTRING(256),   /* Password  */
        CSTRING(256),   /* FirstName */
        CSTRING(256)    /* LastName  */
        RETURNS INTEGER BY VALUE
        ENTRY_POINT 'IBCreateUser' MODULE_NAME 'masaudf';

/* ConvertToLocalTime - convert UTC time to local system time */
DECLARE EXTERNAL FUNCTION ConvertToLocalTime
        TIMESTAMP NULL
        RETURNS TIMESTAMP FREE_IT
        ENTRY_POINT 'UDF_DateTimeToLocalDateTime' MODULE_NAME 'masaudf';

/* ConvertToLocalTime - convert local system time to UTC time */
DECLARE EXTERNAL FUNCTION ConvertToUTC
        TIMESTAMP NULL
        RETURNS TIMESTAMP FREE_IT
        ENTRY_POINT 'LocalDateTimeToUTCDateTime' MODULE_NAME 'masaudf';

/* GetMasaTimeZone - return JSON format contained TMasaTimeZoneInformation or one string member Error */
/* Example of returned JSON data {
"Bias":-60,
"StandardName":"Støední Evropa (bìžný èas)",
"StandardDate":{"wYear":0,"wMonth":10,"wDayOfWeek":0,"wDay":5,"wHour":3,"wMinute":0,"wSecond":0,"wMilliseconds":0},
"StandardBias":0,
"DaylightName":"Støední Evropa (letní èas)",
"DaylightDate":{"wYear":0,"wMonth":3,"wDayOfWeek":0,"wDay":5,"wHour":2,"wMinute":0,"wSecond":0,"wMilliseconds":0},
"DaylightBias":-60,
"TimeZoneKeyName":"Central Europe Standard Time",
"DynamicDaylightTimeDisabled":false,
"Display":"(GMT+01:00) Praha, Bratislava, Budapeš, Bìlìhrad, Lublaò",
"Index":95}
*/
DECLARE EXTERNAL FUNCTION GetMasaTimeZone
        RETURNS CSTRING(2048) CHARACTER SET UTF8 FREE_IT                             -- Result string
        ENTRY_POINT 'getMasaTimeZone' MODULE_NAME 'masaudf';
        COMMENT ON EXTERNAL FUNCTION GetMasaTimeZone IS 'Get TimeZone information via JSON';

/* Substring functions */
DECLARE EXTERNAL FUNCTION SubStrFromStr
        CSTRING(8190) CHARACTER SET UTF8 NULL,                   -- String
        CSTRING(32) CHARACTER SET UTF8 NULL,                     -- Delimiter
        INTEGER NULL                                             -- Index, first string is zero
        RETURNS CSTRING(8190) CHARACTER SET UTF8 FREE_IT         -- Result string
        ENTRY_POINT 'UDF_SubStrFromStr' MODULE_NAME 'masaudf';

DECLARE EXTERNAL FUNCTION SubStrToEnd
        CSTRING(8190) CHARACTER SET UTF8 NULL,                   -- String
        CSTRING(32) CHARACTER SET UTF8 NULL,                     -- Delimiter
        INTEGER NULL                                             -- Index, first string is zero
        RETURNS CSTRING(8190) CHARACTER SET UTF8 FREE_IT         -- Result string
        ENTRY_POINT 'UDF_SubStrToEnd' MODULE_NAME 'masaudf';

DECLARE EXTERNAL FUNCTION SubStrCount
        CSTRING(8190) CHARACTER SET UTF8 NULL,                   -- String
        CSTRING(32) CHARACTER SET UTF8 NULL                      -- Delimiter
        RETURNS INTEGER BY VALUE                                 -- Count of substrings
        ENTRY_POINT 'UDF_SubStrCount' MODULE_NAME 'masaudf';

DECLARE EXTERNAL FUNCTION SubStrContains
        CSTRING(8190) CHARACTER SET UTF8 NULL,                   -- String
        CSTRING(8190) CHARACTER SET UTF8 NULL,                   -- SearchValue
        CSTRING(32) CHARACTER SET UTF8 NULL,                     -- Delimiter
        SMALLINT NULL,                                           -- AutomaticTrim
        SMALLINT NULL                                            -- CaseInsensitive
        RETURNS SMALLINT BY VALUE                                -- Boolean result
        ENTRY_POINT 'UDF_SubStrContains' MODULE_NAME 'masaudf';

DECLARE EXTERNAL FUNCTION StrToTerms
        CSTRING(8190) CHARACTER SET UTF8 NULL                   -- String that will be parsed to list of terms separated by comma
        RETURNS CSTRING(8190) CHARACTER SET ASCII FREE_IT       -- Terms separated by comma
        ENTRY_POINT 'UDF_StrToTerms' MODULE_NAME 'masaudf';
COMMENT ON EXTERNAL FUNCTION StrToTerms IS 'Analyze input text and split it into Full Text searchable terms';        

-- Retunrs name of local computer where FB server running
DECLARE EXTERNAL FUNCTION ComputerName
        RETURNS CSTRING(2000) CHARACTER SET UTF8 FREE_IT         -- Result string
        ENTRY_POINT 'UDF_ComputerName' MODULE_NAME 'masaudf';
        
-- IBReplicator support functions
DECLARE EXTERNAL FUNCTION IBR_DecodePassword
        CSTRING(32) CHARACTER SET NONE NULL                      -- Encoded password
        RETURNS CSTRING(50) CHARACTER SET NONE FREE_IT           -- Decoded password
        ENTRY_POINT 'UDF_IBR_DecodePassword' MODULE_NAME 'masaudf';

-- IBReplicator support functions
DECLARE EXTERNAL FUNCTION IBR_EncodePassword
        CSTRING(32) CHARACTER SET NONE NULL                      -- Plain password
        RETURNS CSTRING(50) CHARACTER SET NONE FREE_IT           -- Encoded password
        ENTRY_POINT 'UDF_IBR_EncodePassword' MODULE_NAME 'masaudf';        

/* Test code */
CREATE EXCEPTION EMASAUDF 'MASA UDF self test failed';
COMMIT;
SET TERM ^;
EXECUTE BLOCK AS
DECLARE VARIABLE id INTEGER;
DECLARE VARIABLE s VARCHAR(2048);
DECLARE VARIABLE t TIMESTAMP;
DECLARE VARIABLE t2 TIMESTAMP;
DECLARE psw VARCHAR(32) CHARACTER SET NONE;
BEGIN
  s=getMasaTimeZone();
  if(s IS NULL OR s = '') THEN EXCEPTION EMASAUDF 'getMasaTimeZone';
  s=BHDEncode(1);
  IF(s<>'P11')THEN EXCEPTION EMASAUDF 'BHDEncode';
  IF(BHDCheck(s)=0) THEN EXCEPTION EMASAUDF 'BHDCheck';
  id=BHDDecode(s);
  IF(id<>1)THEN EXCEPTION EMASAUDF 'BHDDecode';
  s=CustomFormat('x+12','0',10);
  IF(s<>'22')THEN EXCEPTION EMASAUDF 'CustomFormat';
  id=StringHash('');
  IF(id<>0)THEN EXCEPTION EMASAUDF 'StringHash';
  id=StringHash(NULL);
  IF(id<>0)THEN EXCEPTION EMASAUDF 'StringHash';
  id=StringHash('Testing string');
  IF(id=0)THEN EXCEPTION EMASAUDF 'StringHash';
  /* use getExactTimestamp and getExactTimestampUTC to check convert function 
     insted fixed time points that can works only on czech PC with czech configuration
   */   
  t=ConvertToLocalTime(getExactTimestampUTC());
  t2=CURRENT_TIMESTAMP;
  /* There can be a difference, but less then 2s */ 
  IF (t2-t>2.0/(24.0*60.0*60.0)) THEN EXCEPTION EMASAUDF 'ConvertToLocalTime daylight expected:'||t2||' calculated:'||t; /* daylight */
  /* ConvertToLocalTime test - only for central europe! */
  t=ConvertToLocalTime('2012-12-01 12-00-00');
  IF (t<>'2012-12-01 13-00-00') THEN EXCEPTION EMASAUDF 'ConvertToLocalTime normaltime'; /* normaltime */
  t=ConvertToLocalTime(null);
  IF (t<>null) THEN EXCEPTION EMASAUDF 'ConvertToLocalTime null'; 
  t=ConvertToUTC(null);
  IF (t<>null) THEN EXCEPTION EMASAUDF 'ConvertToUTC null';  
  /* There can be a difference, but less then 2s */
  if (ConvertToUTC(CURRENT_TIMESTAMP)-getExactTimestampUTC()>2/(24*60*60)) THEN EXCEPTION EMASAUDF 'ConvertToUTC daylight';
  /* ConvertToUTC test - only for central europe! */
  if (ConvertToUTC('2012-12-01 13-00-00')<>'2012-12-01 12-00-00') THEN EXCEPTION EMASAUDF 'ConvertToUTC normaltime';
  t='2012-10-01 14-00-00';
  IF (ConvertToLocalTime(ConvertToUTC(t))<>t) THEN EXCEPTION EMASAUDF 'ConvertToLocalTime and ConvertToUTC';
  -- Extreme Date handling
  IF(ConvertToUTC('0001-01-01 00:00:00') IS NOT NULL) THEN EXCEPTION EMASAUDF 'ConvertToLocalTime and ConvertToUTC';
  IF(ConvertToLocalTime('0001-01-01 00:00:00') IS NOT NULL) THEN EXCEPTION EMASAUDF 'ConvertToLocalTime and ConvertToUTC';
  IF(ConvertToLocalTime('9999-12-31 23:59:59') IS NOT NULL) THEN EXCEPTION EMASAUDF 'ConvertToLocalTime and ConvertToUTC';
  /* StringHash test */
  IF (StringHash('123')<>1003) THEN EXCEPTION EMASAUDF 'StringHash';
  /* IBPassword test */
  IF (IBPassword('test')<>'yuQ1SjYwqew') THEN EXCEPTION EMASAUDF 'IBPassword';
  /* Test logging */
  IF (LogString('Test')<>4) THEN EXCEPTION EMASAUDF 'LogString';
  IF (LogToFile('Test')<>4) THEN EXCEPTION EMASAUDF 'Log';
  /* Substring test code */
  s=SubStrFromStr('Str1,Str2,Str3,Str4',',',0);
  IF(s<>'Str1') THEN EXCEPTION EMASAUDF 'SubStrFromStr.Str1';
  s=SubStrFromStr('Str1,Str2,Str3,Str4',',',1);
  IF(s<>'Str2') THEN EXCEPTION EMASAUDF 'SubStrFromStr.Str2';
  s=SubStrFromStr('Str1,Str2,Str3,Str4',',',3);
  IF(s<>'Str4') THEN EXCEPTION EMASAUDF 'SubStrFromStr.Str4';
  s=SubStrFromStr('Str1,Str2,Str3,Str4',',',4);
  IF(s IS NOT NULL) THEN EXCEPTION EMASAUDF 'SubStrFromStr.NULL';
  /* SubStrContains */
  IF(SubStrContains('a,b ,c', ' B', ',', null, null)=0) THEN EXCEPTION EMASAUDF 'StrContains.Str1';
  IF(SubStrContains('a,b ,c', 'b', ',', 0, 1)<>0) THEN EXCEPTION EMASAUDF 'StrContains.Str2';
  IF(SubStrContains('a,b ,c', 'B', ',', 1, 1)=0) THEN EXCEPTION EMASAUDF 'StrContains.Str3';
  -- StrToTerm
  s = StrToTerms('Ahoj');
  IF(s <> 'AHOJ') THEN EXCEPTION EMASAUDF 'StrToTerm - Test 1';
  s = StrToTerms('ěščřžýáíéů'); -- test for accents removal
  IF(s <> 'ESCRZYAIEU') THEN EXCEPTION EMASAUDF 'StrToTerm - Test 2 ('||s||')';
  s = StrToTerms('aa''aa');     -- test for aphostrophe removal
  IF(s <> 'AAAA') THEN EXCEPTION EMASAUDF 'StrToTerm - Test 3';
  s = StrToTerms('Word1 Word2 Word3');
  IF(SubStrCount(s,',') <> 3) THEN EXCEPTION EMASAUDF 'StrToTerm - Test 4';
  -- IB Replicator
  s = IBR_DecodePassword(NULL);
  IF(s IS NOT NULL)THEN EXCEPTION EMASAUDF 'IBR_DecodePassword(NULL) failed';
  s = IBR_EncodePassword(NULL);
  IF(s IS NOT NULL)THEN EXCEPTION EMASAUDF 'IBR_EncodePassword(NULL) failed';
  s = IBR_DecodePassword(x'2F5148674E282B26');
  IF(s <> 'Mes_REPL')THEN EXCEPTION EMASAUDF 'IBR_DecodePassword failed';
  psw = IBR_EncodePassword('ABCDEF');
  IF(IBR_DecodePassword(psw) <> 'ABCDEF')THEN EXCEPTION EMASAUDF 'IBR_DecodePassword failed';
  s = SSCCCheckDigit(NULL);
  IF(s IS NOT NULL)THEN EXCEPTION EMASAUDF 'SSCCCheckDigit NULL test failed';
  s = SSCCCheckDigit('111111111111');
  IF(s IS DISTINCT FROM '6')THEN EXCEPTION EMASAUDF 'SSCCCheckDigit 111111111111 test failed';
END^
SET TERM ;^
SELECT RandG(3,3) FROM rdb$database;

                  RANDG 
======================= 
      4.780354685690757 

SELECT Sleep(NULL) FROM rdb$database;

       SLEEP 
============ 
           0 

SELECT Sleep(0) FROM rdb$database;

       SLEEP 
============ 
           0 

SELECT RandRange(0) FROM rdb$database;

              RANDRANGE 
======================= 
     0.0000000000000000 

SELECT RandSeed() FROM rdb$database;

    RANDSEED 
============ 
           0 

SELECT Frac(1.5) FROM rdb$database;

                   FRAC 
======================= 
     0.5000000000000000 

SELECT IsNan(1.5) FROM rdb$database;

       ISNAN 
============ 
           0 

SELECT ComputerName() FROM rdb$database;


=============================================================================== 
CORE-I7-6700K                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    


COMMIT;

SET TERM ^;
-- do not fail if user exists
EXECUTE BLOCK AS
DECLARE VARIABLE s VARCHAR(1000);
BEGIN   
  s = 'CREATE USER REPL_FB_Lib PASSWORD ''test'';';
  BEGIN
    EXECUTE STATEMENT s;
  WHEN ANY DO BEGIN END
  END  
END
^

SET TERM ;^
COMMIT;

GRANT RDB$ADMIN TO REPL_FB_Lib;
COMMIT;

